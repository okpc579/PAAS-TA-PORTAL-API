buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

ext {
    springCloudVersion = 'Edgware.RELEASE'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

jar {
    baseName = 'paas-ta-portal-api'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    //Server Security
    compile ('org.springframework.boot:spring-boot-starter-security')
    //Admin Server Setting
    //compile ('de.codecentric:spring-boot-admin-starter-client:1.5.7')

    //Config Server Setting
    //compile('org.springframework.cloud:spring-cloud-starter-config')

    //Eureka
    compile ('org.springframework.cloud:spring-cloud-starter-eureka')

    //cloud foundry client
    compile ('org.cloudfoundry:cloudfoundry-client-reactor:3.17.1.RELEASE')
    compile ('org.cloudfoundry:cloudfoundry-operations:3.17.1.RELEASE')
    compile ('org.cloudfoundry:cloudfoundry-client:3.17.1.RELEASE')
    compile ('org.cloudfoundry:cloudfoundry-client-lib:1.1.3')
    compile ('org.cloudfoundry:cloudfoundry-util:3.17.1.RELEASE')

    compile ('io.projectreactor:reactor-core:3.1.8.RELEASE')
    compile ('io.projectreactor.netty:reactor-netty:0.8.4.RELEASE')

    compile ('com.googlecode.json-simple:json-simple:1.1.1')

    //cloud foundry uaa
    compile files('libs/uaa-java-client-1.0.2-SNAPSHOT.jar')
    compile ('org.cloudfoundry.identity:cloudfoundry-identity-scim:2.7.4'){
        exclude group: 'org.slf4j'
    }

    compile ('org.flywaydb:flyway-core:4.0.3')

    // testCompile
    testCompile ('org.cloudfoundry:cloudfoundry-client-reactor:3.17.1.RELEASE')
    testCompile ('org.cloudfoundry:cloudfoundry-operations:3.17.1.RELEASE')
    testCompile ('org.cloudfoundry:cloudfoundry-client:3.17.1.RELEASE')
    testCompile ('org.cloudfoundry:cloudfoundry-client-lib:1.1.3')
    testCompile ('org.cloudfoundry:cloudfoundry-util:3.17.1.RELEASE')

    testCompile ('io.projectreactor:reactor-core:3.1.8.RELEASE')
    testCompile ('io.projectreactor.netty:reactor-netty:0.8.4.RELEASE')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.12'
    testCompile group: 'org.jsoup', name: 'jsoup', version: '1.9.2'

    testCompile "org.powermock:powermock-module-junit4:1.6.6"
    testCompile "org.powermock:powermock-api-mockito:1.6.6"
    testCompile "com.squareup.okhttp3:mockwebserver:3.11.0"

}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.9+"
}

test {
    ignoreFailures=true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
    }
}

/* 
// windows only
task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
       manifest {
           attributes "Class-Path": configurations.runtime.files.collect {it.toURL().toString().replaceFirst("file:/", '/')}.join(" ")
       }
   }
}

bootRun {
   dependsOn pathingJar
   jvmArgs = [ '-server', '-Xmx256m', '-Dspring.profiles.active=local', '-Deureka.client.enabled=false', '-Dspring.cloud.config.enabled=false', '-Dspring.config.location=C:/paasta-workspace/official/PAAS-TA-PORTAL-CONFIG-DATA/PortalApi.yml', '-Dio.netty.leakDetectionLevel=PARANOID' ]
   doFirst {
       // classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
       classpath = files(sourceSets.main.output.files, pathingJar.archivePath)
   }
} 
*/
