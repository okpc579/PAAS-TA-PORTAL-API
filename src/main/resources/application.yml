# Spring properties
spring:
  application:
    name: PortalApi  # Service registers under this name
  security:
    username: admin
    password: openpaasta
  flyway:
    enabled: false


# HTTP Server
server:
  port: ${PORT:2222}   # HTTP (Tomcat) port

tailsocket:
  port: 5555

management:     # If you set off security...
  security:
    enabled: false

# paasta info
cloudfoundry:
  cc:
    api:
      url: https://api.<DOMAIN>
      uaaUrl: https://uaa.<DOMAIN>
      sslSkipValidation: true
  # CloudFoundry Login information
  user:
    admin:
      username: <CF_USER_ADMIN_USERNAME>                # (e.g. admin)
      password: <CF_USER_ADMIN_PASSWORD>                # (e.g. admin)
    uaaClient:
      clientId: <UAA_CLIENT_ID>                         # (e.g. admin)
      clientSecret: <UAA_CLIENT_SECRET>                 # (e.g. admin-secret)
      adminClientId: <UAA_ADMIN_CLIENT_ID>              # (e.g. admin)
      adminClientSecret: <UAA_ADMIN_CLIENT_SECRET>      # (e.g. admin-secret)
      loginClientId: <UAA_LOGIN_CLIENT_ID>              # (e.g. admin)
      loginClientSecret: <UAA_LOGIN_CLIENT_SECRET>      # (e.g. admin-secret)
      skipSSLValidation: true
  authorization: cf-Authorization

abacus:
  url: http://<ABACUS_URL>

# 포탈 상세 모니터링
monitoring:
  api:
    url: http://<MONITORING_API_URL>

multipart:
  maxFileSize: 1000Mb
  maxRequestSize: 1000Mb

paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://<PORTAL_GATEWAY_IP>:<PORTAL_GATEWAY_PORT>/portalapi
        commonapi: http://<PORTAL_GATEWAY_IP>:<PORTAL_GATEWAY_PORT>/commonapi
        storageapi: http://<PORTAL_GATEWAY_IP>:<PORTAL_GATEWAY_PORT>/storageapi
    storageapi:
      type: swift

# Discovery Server Access
eureka:
  client:
    serviceUrl:
      defaultZone: http://<PORTAL_REGISTRATION_IP>:<PORTAL_REGISTRATION_PORT>/eureka/
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10

#Spring config setting (current version not used)
#  boot:
#    #Spring boot admin settings
#    admin:
#      routes:
#        endpoints: env,metrics,trace,info,trace,heapdump,hystrix.stream,docs,turbine
#        #Timeintervalin ms to update the status of App
#      monitor:
#        perio: 10000
#        #LifeTime of App status in ms.
#        status-lifetime: 10000
#        #Connection Timeout in ms when App's status and info
#        connect-timeout: 2000
#        #Read Timeout in ms when App's status and info
#        read-timeout: 5000
#      metadata-keys-to-sanitize: .password$,.*secret$,.*key$,.$token$,.credentials.,.*vcap_services$

#Infra Admin Settings (current version not used)
#project:
#  name: paasta-api
#  artifactId: paasta-cf-api
#  description: paasta-cf-api management service
#info:
#  app:
#    encoding: Encoding - UTF-8
#  java:
#    source: Source - java ver
#    target: Instance1 - Java ver
#  spring:
#    profiles: ${spring.profiles.active:default}
#  build:
#    name: ${project.name}
#    artifact: ${project.artifactId}
#    description: ${project.description}


#Hystrix Setting(current version not used)
#hystrix:
#  threadpool:
#    default:
#      # Maximum number of concurrent requests when using thread pools (Default: 10)
#      coreSize: 100
#      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
#      maxQueueSize: -1
#      # Queue size rejection threshold (Default: 5)
#      queueSizeRejectionThreshold: 5
#  command:
#    default:
#      circuitBreaker:
#        sleepWindowInMilliseconds: 60000
#        requestVolumeThreshold: 3
#      execution:
#        isolation:
#          #strategy: SEMAPHORE, no thread pool but timeout handling stops to work
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000
